# -*- coding: utf-8 -*-
"""2. EDA HR-analytics-employees-engagement.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u7w0ZLkZn_bNr3PjhIMNS1gcRTs2Gjk3

# **HR Analytics - Employees Engagement**

**In this EDA project we will performing HR Analytics - Employees Engagement Analysis which is present in kaggle platform.In this EDA Project we will analyze and visualize our dataset.**




* **The job role of a HR is not that easy as it seems from the outside**

* **The HR's have to actively participate in the recruitment process, helping employees with their issues, maintaining positive work environment, analysing the performance and efficiency, and many more**

* **Among all the job responsibilites of an HR, evaluating the performance and efficiency of the employees is considered the most difficult task**

* **The difficulty level of this task is directly proportional to the no. of employees who work under that particular HR**

* **Thus, to deal with this, we have come with an Exploratory Data Analysis (EDA) project**

* **Here, we'll be performing different analysis and visualizations using the Employees Enagagment Dataset to obtain some valuable insights**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt



import warnings
warnings.filterwarnings('ignore')

df=pd.read_csv('HRDataset_v14.csv')
df

df.columns

df.shape

#311 rows 36 columns

df.info()

df.dtypes

#cleaning the data

df.isnull().sum()

df.shape

df.fillna("0", inplace = True)

df.isnull().sum()

df.duplicated().sum()

df.drop_duplicates(inplace=True)

df.dtypes

df.head()

#EDA
#employees with highest salary >> top 10 higest employees

df.columns

df.Salary.sort_values(ascending = False).head(10)

#Employees who needs the special attention
#Performance Improvement Plan(PIP)

df.columns

df['PerformanceScore'].unique()

df[df['PerformanceScore'] == 'PIP']

people_pip = df[df['PerformanceScore'] == 'PIP'].Employee_Name

len(people_pip)

people_pip

#No of absences

df['Absences'].value_counts()

#whether the employees are married/or not

df['MarriedID'].value_counts()

#insights >> 187 employees are unmarries and 124 employees

df.columns

df[df['SpecialProjectsCount'] != 0]

df['SpecialProjectsCount'].sort_values(ascending = False)

df[df['SpecialProjectsCount'] == 0]

#insights >> out of 311 employes 70 employees have special project

#Visualisation
#Highest salary vs lowest salary

df['Salary'].sort_values(ascending = False).head(10)

df['Salary'].sort_values(ascending = False).tail(10)

c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

x = df['Salary'].sort_values(ascending = False).head(10)
y = df['Salary'].sort_values(ascending = False).tail(10)


plt.bar(c, x, color = 'g', label = 'Highest salaries')
plt.bar(c, y, color = 'r', label = 'Lowest salaries')



plt.title('Top 10 highest vs lowest salaries', fontsize = 14)

plt.xticks(c)
plt.ylabel('salaries')
plt.legend()
plt.show()

#insight
#lowest salary are mostly in range
#highest salary varies
y

x

df.columns

#sources of recruitment

df['RecruitmentSource']

df['RecruitmentSource'].unique()

l = df['RecruitmentSource'].value_counts()
l

plt.barh(l.index, l, color = 'r')
plt.title('Sources of recruitment', fontsize = 12)

plt.xlabel('No of candidates hired')
plt.ylabel('Recruitment Score')


plt.show()

#Insights
#Indeed is the most common
#Indded, linkedin, google search

df.columns

df['PerformanceScore']

z = df['PerformanceScore'].value_counts()
z

plt.figure(figsize = (10, 6))

sns.lineplot(data = z, marker = 'o', color = 'purple', linewidth = 2, )

plt.title('Performance trend analysis')
plt.xlabel('Performance score')
plt.ylabel("Values")
plt.grid()
plt.show()

#insights
#general trend increases
#50-250 mostly the score

df.columns

df['EmpSatisfaction'] #scale of 1-5

b = df['EmpSatisfaction'].value_counts()
b

plt.stem(b.index, b)
plt.ylabel("No of employees")
plt.xticks(b.index)
plt.xlabel("Rating given")
plt.ylabel("emp satis")
plt.show()

#insights
#the most common rating 3

#multi-variate analysuisdf

df.columns

#outliers in salary in each department

plt.figure(figsize = (15, 8))

sns.boxplot(x = 'Department', y ='Salary', data = df, palette = 'viridis')
plt.title("Department-Salary")

plt.xlabel("Department")
plt.ylabel("Salary")
plt.xticks(rotation = 45)
plt.show()

#insights
#executives are paid highest
#least salary is production

df.columns

df.Position

df.EngagementSurvey

plt.figure(figsize = (15, 8))
sns.barplot(x = 'Position', y='EngagementSurvey', data = df, palette = 'muted')

plt.xticks(rotation = 45)
plt.show()

#marital status by gender
sns.countplot(x = 'MaritalDesc', hue = "GenderID", data = df, palette = "pastel")

#what is the avg enagement score for employees in each department

df.groupby('Department')['EngagementSurvey'].mean()

#internal h/w

#How many employees have been terminated from each position

df.columns

df[df['Termd'] == 1].groupby('Position')['Employee_Name'].count()

#how many employees have been terminated for each reason

df[df['Termd'] == 1].groupby('TermReason')['Employee_Name'].count()

df['TermReason']

#What is the median salary of male and female employees
df.groupby('Sex')['Salary'].median()

#what is the maximum no of absences taken by employees in each department

df.groupby('Department')['Absences'].max()

#what is the total absences and average engaement survey score for each dept


df.groupby('Department').agg({'Absences': 'sum', 'EngagementSurvey':'mean'})

"""#internal homework:
#What is the maximum salary and minimum days late in the last 30 days for employees in each position?
#How many terminated employees were there in each department and what is the average employee satisfaction level among them?
#What is the earliest and latest date of hire for employees in each manager's team?

"""

#What is the total number of special projects and average absences for employees in each gender category?


df.groupby('Sex').agg({'SpecialProjectsCount': 'sum', 'Absences': 'mean'})

